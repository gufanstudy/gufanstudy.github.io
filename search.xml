<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python爬虫(一):学习路线</title>
      <link href="/2022/05/06/Python%E7%88%AC%E8%99%AB(%E4%B8%80)%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2022/05/06/Python%E7%88%AC%E8%99%AB(%E4%B8%80)%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><blockquote><p>打铁还需自身硬</p><p>前置要求：掌握Python基础知识</p></blockquote><ul><li><p>知识点+案例 为驱动</p></li><li><p>第一阶段：爬虫核心</p><ul><li><p>爬虫的前导知识</p></li><li><p>爬虫网络请求模块（uellib requests）</p></li><li><p>数据解析（正则 xpath bas4）</p></li></ul></li><li><p>第二阶段：爬虫进阶</p><ul><li><p>selenium(自动化的测试工具)</p></li><li><p>动态数据</p></li><li><p>多线程</p></li><li><p>增加爬取的效率</p></li><li><p>队列</p></li></ul></li><li><p>第三阶段：Scrapy框架和分布式爬虫</p><ul><li>如何使用Scrapy框架</li><li>分布式爬虫工作流程以及如何把一个普通的爬虫改写成分布式爬虫</li></ul></li><li><p>第四阶段：数据存储</p><ul><li>CSV</li><li>redis</li><li>mongodb（重点）</li></ul></li><li><p>第五阶段：移动开发</p><ul><li>前导知识（Android）（mainactivity listview textview）</li><li>fiddler抓包工具</li><li>爬取移动端数据</li></ul></li><li><p>第六阶段：反爬策略</p><ul><li>字体反爬</li><li>代理IP（免费代理IP 失效率低 响应慢）（购买IP）</li><li>复杂验证码（图片验证 tessertact 行为验证 打码平台）</li><li>JS反爬（门槛相当高 起码掌握JS基础 分析维度比较高 案例 总结套路 常见算法了解）</li></ul></li></ul><blockquote><p>PS：</p><p>​懂了</p><p>​不代表会了</p></blockquote><blockquote><p>学习方法：</p><p>​百度  未知的 不明确的 找资料</p><ul><li>准备报错集</li><li>解决方案文档</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>传统人脸识别方法介绍</title>
      <link href="/2022/05/03/%E4%BC%A0%E7%BB%9F%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/"/>
      <url>/2022/05/03/%E4%BC%A0%E7%BB%9F%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E6%96%B9%E6%B3%95%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="基于几何特征的方法"><a href="#基于几何特征的方法" class="headerlink" title="基于几何特征的方法"></a>基于几何特征的方法</h3><p>基于几何特征的方法是最早、最传统的方法，该方法是通过提取人脸的几何特征，包括人脸部件的归一化的点间距离、比率以及人脸的一些特征点，如眼角、嘴角、鼻尖等部位所构成的二维拓扑结构进行识别的方法。主要代表是MIT的Bruelli和Poggio小组,他们采用改进的积分投影法提取出用欧氏距离表征的35维人脸特征矢量用于模式分类。几何特征方法利用的是单纯的几何信息，其优点是所需的存储空间和分类时间代价比较小，而且在图像分辨率较低的情况下仍然可以使用。缺点是识别的准确率完全依赖于几何特征的准确提取，而几何特征本身容易受姿态和表情变化的影响，稳定性不高。即使几何特征提取准确，仍然可能因为有较大的变化而导致分类错误。因此，目前单纯利用几何特征的人脸识别方法已经不常使用了，但几何特征仍然可以作为其它特征的有益补充。</p><blockquote><p>优点：</p><p>所需存储空间和分类时间代价比较小</p><p>在图像分辨率低的情况下也可以使用</p></blockquote><blockquote><p>缺点：</p><p>不稳定</p><p>精度完全依赖几何特征的准确提取，容易受人脸的姿态和表情影响目前很少单独使用</p><p>往往作为其他特征的补充</p></blockquote><h3 id="基于模板匹配的方法"><a href="#基于模板匹配的方法" class="headerlink" title="基于模板匹配的方法"></a>基于模板匹配的方法</h3><p>模板匹配的方法是模式识别中所采用方法中最传统的方法之一，该方法主要是利用计算模板和图像灰度的自相关性来实现识别功能的。主要代表是Yuille,他采用弹性模板来提取眼睛和嘴巴的轮廓。在人脸识别问题中，模板既可以是整个人脸图像构成的单-模板，也可以是不同局部特征子图像构成的多个模板的组合。分类时，将待识别图像与所有已知图像进行匹配，根据最终匹配得分进行分类。Brunelli 在1993 年对基于几何特征的方法和模板匹配的方法进行了较全面的介绍和比较后认为,模板匹配的方法优于几何特征的方法.但是，模板匹配的方法由于利用了相关性信息，对光照、旋转和表情变化比较敏感。另外，模板匹配的计算量比较大，多尺度、多模板的使用会增加计算和存储的复杂度。</p><blockquote><p>优点：</p><p>优于几何特征信息</p></blockquote><blockquote><p>缺点：</p><p>由于利用了相关信息，对光照、旋转和表情变化比较敏感</p><p>计算量大，在多尺度、多模板的情况下会增加计算和存储的复杂性</p></blockquote><h3 id="基于统计的方法"><a href="#基于统计的方法" class="headerlink" title="基于统计的方法"></a>基于统计的方法</h3><p>基于统计的方法是现代人脸识别方法中比较经典且常见的，包括特征脸Eganc方法和隐马尔可夫模型(iden Mantov Mole等方法。基于统计的方法将人险用代数特征矢量表示。这类方法利用统计策略从整个训练图像集合提取统计特征后，通过匹配学习找出人脸和非人脸以及不同人脸之间的联系，并不要求单独抽取眼睛、鼻子等面部特征，从原理上更为先进合理，实验中也表现出更好的识别效果。</p><h4 id="——K-L变换的特征脸"><a href="#——K-L变换的特征脸" class="headerlink" title="——K-L变换的特征脸"></a>——K-L变换的特征脸</h4><p>特征脸方法,也称为主分量分析(PCA)方法。srvich和Kiby)首先将K-L变换用于人脸图像的最优表示，Turk 受其启发，将包含人脸的图像区域看作是一种随机向量， 通过KL变换获得其正交基底，并利用重构权向量作为识别用的特征，从而提出了“特征脸”方法。该方法具有简单有效的特点，目前已成为事实上的基准测试算法。本文的第三章将重点讨论此方法的具体应用。特征脸方法的重要贡献不仅在于它为基于图像的目标识别提供了一一种普遍的方法， 而且降维和特征提取这种思想为目标识别提供了- -种方法论。但是在人脸识别问题上，它的不足之处是受表情变化、光照角度、强度变化和视角变化等严重影响，鲁棒性较差。因此,研究者在此基础上发展了许多改进方案，如Behumer提出的Fisher脸方法,特征半脸方法四等。</p><blockquote><p>优点：</p><p>简单有效</p></blockquote><blockquote><p>缺点：</p><p>鲁棒性差，易受表情、光照、角度等因素影响</p></blockquote><h4 id="——隐马尔可夫模型"><a href="#——隐马尔可夫模型" class="headerlink" title="——隐马尔可夫模型"></a>——隐马尔可夫模型</h4><p>隐马尔可夫模型是用于描述信号统计特征的一组统计模型， 作为一种语音识别的方法取得了很好的效果。近年来越来越多的研究工作者将这种方法运用到人脸识别当中。Samaria,叫最早建议了关于人脸的一维隐马尔可夫模型，他用一个矩形窗从上到下采样人脸图像,用灰度值作为观察序列.Netan发展了Samria的方法，用39个2D-0T系数代替灰度值作为观察序列，在一定程度上解决了Samaria方法要求大存储空间的不足。并且有效地提高了识率。</p><blockquote><p>优点：</p><p>在一定程度上解决了Samaria方法要求大存储空间的不足。并且有效地提高了识率。</p></blockquote><h3 id="基于链接机制的方法"><a href="#基于链接机制的方法" class="headerlink" title="基于链接机制的方法"></a>基于链接机制的方法</h3><p>基于连接机制的方法，包括一般的神经网络(Neural Network)方法和弹性图匹配(Elastic Graph Matching)方法21。基于神经网络的方法是最近几年比较活跃的一个研究方向。神经网络由于其固有的并行运算机制以及对于模式的分布式全局存储，在人脸识别上比其它类别的方法有独到的优势，它避免了复杂的特征提取作，通过学习的过程获得其它方法难以实现的关于人脸识别规律和规则的隐性表达，而且不受模式形变的影响。最早应用神经网络进行人脸识别工作的Kohonen,利用网络的联想能力回忆人脸，当输入图像噪音很多或部分图像丢失时，也能回忆出准确的人脸。但是该方法通常将人脸作为一个- -维向量输入，如一幅不大100x100的图像为10000维，这样神经网络的输入节点将很庞大，因此实际训练网络的时候参数繁多，实现起来很困难。同时该方法要求训练样本比较充分才能得到较好的识别效果，否则在光照、尺度变化以及小的形变情况下都不能很好地识别。</p><h4 id="——动态链接的弹性图匹配"><a href="#——动态链接的弹性图匹配" class="headerlink" title="——动态链接的弹性图匹配"></a>——动态链接的弹性图匹配</h4><p>弹性图匹配方法是一-种基于动态链接结构的方法。该方法在二维空间中定义了一种对 于通常的人脸变形具有一定的不变性的距离，并采用属性拓扑图来代表人脸，拓扑图的任一项点均包含特征向量，用来记录人脸在该项点位置附近的特征信息，然后利用弹性匹配法将库中人脸和待识别人脸的弹性图进行匹配，找到匹配程度最高的一个人脸图像。该方法结合了灰度特性和几何因素，在匹配时允许图像存在弹性形变，对人脸较小角度的旋转、表情以及光照变化等都有较好的容忍性，但是与特征脸识别方法相比识别速度较慢。</p><blockquote><p> 优点：</p><p>结合了灰度特性和几何因素，允许图像存在形变，对小角度旋转、表情和光照变化有较好的容忍性</p></blockquote><blockquote><p>缺点：识别速度较慢</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 人脸识别 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人脸识别 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 素材 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
